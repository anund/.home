"
" Personal preference .vimrc file
" Maintained by Vincent Driessen <vincent@datafox.nl>
"
" My personally preferred version of vim is the one with the "big" feature
" set, in addition to the following configure options:
"
"     ./configure --with-features=BIG
"                 --enable-pythoninterp --enable-rubyinterp
"                 --enable-enablemultibyte --enable-gui=no --with-x --enable-cscope
"                 --with-compiledby="Vincent Driessen <vincent@datafox.nl>"
"                 --prefix=/usr
"
" To start vim without using this .vimrc file, use:
"     vim -u NORC
"
" To start vim without loading any .vimrc or plugins, use:
"     vim -u NONE
"

" Use vim settings, rather then vi settings (much better!)
" This must be first, because it changes other options as a side effect.
set nocompatible

" Use pathogen to easily modify the runtime path to include all plugins under
" the ~/.vim/bundle directory
filetype off                    " force reloading *after* pathogen loaded
call pathogen#infect()
call pathogen#helptags()
filetype plugin indent on       " enable detection, plugins and indenting in one step
syntax on

" Change the mapleader from \ to ,
let mapleader=","
let maplocalleader="\\"

" save on lost focus
:au FocusLost * silent! update

" Leader key timeout
set tm=2000

" Allow the normal use of ,
noremap ,, ,

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" hide buffers instead of closing them
set hidden

" Editing behaviour {{{
set showmode                    " always show what mode we're currently editing in
set nowrap                      " don't wrap lines
set tabstop=4                   " a tab is four spaces
set softtabstop=4               " when hitting <BS>, pretend like a tab is removed, even if spaces
set expandtab                   " expand tabs by default (overloadable per file type later)
set shiftwidth=4                " number of spaces to use for autoindenting
set shiftround                  " use multiple of shiftwidth when indenting with '<' and '>'
set backspace=indent,eol,start  " allow backspacing over everything in insert mode
set autoindent                  " always set autoindenting on
set copyindent                  " copy the previous indentation on autoindenting
set number                      " always show line numbers
set showmatch                   " set show matching parenthesis
set ignorecase                  " ignore case when searching
set smartcase                   " ignore case if search pattern is all lowercase,
                                "    case-sensitive otherwise
set smarttab                    " insert tabs on the start of a line according to
																"    shiftwidth, not tabstop
set scrolloff=4                 " keep 4 lines off the edges of the screen when scrolling
set virtualedit=all             " allow the cursor to go in to "invalid" places
set hlsearch                    " highlight search terms
set incsearch                   " show search matches as you type
set gdefault                    " search/replace "globally" (on a line) by default
set listchars=tab:▸\ ,trail:·,extends:#,nbsp:·

set nolist                      " don't show invisible characters by default,
                                " but it is enabled for some file types (see later)
set pastetoggle=<F2>            " when in insert mode, press <F2> to go to
								"    paste mode, where you can paste mass data
								"    that won't be autoindented
set mouse=a                     " enable using the mouse if terminal emulator
								"    supports it (xterm does)
set fileformats="unix,dos,mac"
set formatoptions+=1            " When wrapping paragraphs, don't end lines
								"    with 1-letter words (looks stupid)

set nrformats=                  " make <C-a> and <C-x> play well with
								"    zero-padded numbers (i.e. don't consider
								"    them octal or hex)

set shortmess+=I                " hide the launch screen
set clipboard=unnamed           " normal OS clipboard interaction
set autoread                    " automatically reload files changed outside of Vim

set relativenumber              " relative line numbering
set undofile                    " persistant undo
set laststatus=2                " status footer
set ttyfast                     " fast scrolling
set wildmenu                    " autocomplete edit mode menu
set wildmode=list:longest

" skip redraw when executing macros
set lazyredraw

" turn of vim search regex                 
nnoremap / /\v
vnoremap / /\v
" clear search highlighting
nnoremap <leader><space> :noh<cr>
" make the tab key match bracket pairs
nnoremap <tab> %
vnoremap <tab> %

" Speed up scrolling of the viewport slightly
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>
" }}}

" turn off keys {{{
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" help
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC> 

" quick exit
inoremap jj <ESC>
" }}}

" less shifting 
nnoremap ; :
nnoremap <leader>; ;

" Use ,d (or ,dd or ,dj or 20,dd) to delete a line without adding it to the
" yanked stack (also, in visual mode)
nnoremap <silent> <leader>d "_d
vnoremap <silent> <leader>d "_d

" Sudo to write
cnoremap w!! w !sudo tee % >/dev/null

" Use The Silver Searcher over grep, iff possible
if executable('ag')
   " Use ag over grep
   set grepprg=ag\ --nogroup\ --nocolor

   " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
   let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

   " ag is fast enough that CtrlP doesn't need to cache
   let g:ctrlp_use_caching = 0
endif

" Define "Ag" command
" command -nargs=+ -complete=file -bar Ag silent! grep! <args> | cwindow | redraw!

" Visual mode pressing * or # searches for the current selection
vnoremap <silent> * :call VisualSelection('f', '')<CR>
vnoremap <silent> # :call VisualSelection('b', '')<CR>

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" powerline
let $PYTHONPATH='/usr/lib/python3.5/site-packages'

" Signal focus mode on
exe 'silent !echo -ne "\033]777;focus;on\007"'

set <S-F1>=^[[UlFocusIn
set <S-F2>=^[[UlFocusOut
" react to focusin focusout for urxvt
map <silent> <S-F1> :bufdo checktime<CR>
map <silent> <S-F2> :wa!<CR>
map! <silent> <S-F1> <esc>:bufdo checktime<CR>
map! <silent> <S-F2> <esc>:wa!<CR>

" Signal focus mode off
autocmd VimLeavePre * exe 'silent !echo -ne "\033]777;focus;off\007"'
